#server.port=80

#data Source
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521/xe
#spring.datasource.username=boot
#spring.datasource.password=1234

# maria                  드라이버  // 주소 : 포트 / 데이터베이스이름 (Spring) ?  
spring.datasource.url=jdbc:mariadb://localhost:3306/spring?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.driverClassName=org.mariadb.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=1234

# spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
# spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521/xe
# spring.datasource.username=boot
# spring.datasource.password=1234

#jpa 8:2 비율 (sql 작성 무:유) SQL없이 메소드 호출로 실행.

    # 실무에선 none - ddl 문이 작동할시 처리 방법.
        spring.jpa.hibernate.ddl-auto=update 
    # db platform 선택
        spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
    # 실행과정에 실행된 sql 보여줌
        spring.jpa.show-sql=true
    # table 마다 sequence 새로 설정
        spring.jpa.hibernate.use-new-id-generator-mappings=false
    # DB의 식별자 ( table , varchar , desc ) 같은 식별에 사용하는 기호 단어들을
    #		quoted로	 따옴표로 구분하기 		 / ``back tick 으로 실질 이름 구분. (DB에선)
        spring.jpa.properties.hibernate.globally_quoted_identifiers=true


# MyBatis
mybatis.mapper-locations=classpath:mapper/**/*.xml